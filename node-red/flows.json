[{
        "id": "9714d8d163999f95",
        "type": "tab",
        "label": "Valve unlock",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1ad8ae2aaa5fa39f",
        "type": "change",
        "z": "9714d8d163999f95",
        "name": "Set UNLOCK effect",
        "rules": [{
            "t": "set",
            "p": "payload",
            "pt": "msg",
            "to": "FX=2&A=10&T=1&IX=200&SX=200&CL=#00FF00&C2=#00FF99",
            "tot": "str"
        }],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "41bf140287b7a9a8",
                "056c2ba98639b007"
            ]
        ]
    },
    {
        "id": "41bf140287b7a9a8",
        "type": "mqtt out",
        "z": "9714d8d163999f95",
        "name": "",
        "topic": "wled/fingerprint-status/api",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4b090ccffa9969da",
        "x": 1540,
        "y": 500,
        "wires": []
    },
    {
        "id": "056c2ba98639b007",
        "type": "delay",
        "z": "9714d8d163999f95",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 580,
        "wires": [
            [
                "7260e6fc43e09a70"
            ]
        ]
    },
    {
        "id": "7260e6fc43e09a70",
        "type": "change",
        "z": "9714d8d163999f95",
        "name": "Set IDLE effect",
        "rules": [{
            "t": "set",
            "p": "payload",
            "pt": "msg",
            "to": "FX=15&A=10&T=1&IX=100&SX=5&CL=#f54284&C2=#42b6f5&C3=#f5a742",
            "tot": "str"
        }],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 580,
        "wires": [
            [
                "41bf140287b7a9a8"
            ]
        ]
    },
    {
        "id": "3106ecaa6acc579a",
        "type": "http request",
        "z": "9714d8d163999f95",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "f4f957554143f16e"
            ]
        ]
    },
    {
        "id": "f4f957554143f16e",
        "type": "debug",
        "z": "9714d8d163999f95",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1530,
        "y": 780,
        "wires": []
    },
    {
        "id": "ead44ab8e486f083",
        "type": "function",
        "z": "9714d8d163999f95",
        "name": "set msg.url",
        "func": "const name = msg.payload.split('|')[0].trim()\nconst sentence = \"Prost \" + name\n\nreturn {\n    url: \"http://flask-larynx:1349/talk/\" + sentence\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "3106ecaa6acc579a"
            ]
        ]
    },
    {
        "id": "1eb39ac3d29fcc64",
        "type": "comment",
        "z": "9714d8d163999f95",
        "name": "Fancy LED shit",
        "info": "",
        "x": 1140,
        "y": 460,
        "wires": []
    },
    {
        "id": "0f0c99a903f58c95",
        "type": "comment",
        "z": "9714d8d163999f95",
        "name": "Fancy text-to-speech shit",
        "info": "",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "732a1b8a4ce7c86a",
        "type": "mqtt in",
        "z": "9714d8d163999f95",
        "name": "saufhaengerle listener",
        "topic": "saufhaengerle/unlock",
        "qos": "2",
        "datatype": "auto",
        "broker": "4b090ccffa9969da",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 720,
        "y": 500,
        "wires": [
            [
                "1ad8ae2aaa5fa39f",
                "ead44ab8e486f083"
            ]
        ]
    },
    {
        "id": "4b090ccffa9969da",
        "type": "mqtt-broker",
        "name": "Docker MQTT",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "nodered-status",
        "birthQos": "0",
        "birthPayload": "online",
        "birthMsg": {},
        "closeTopic": "nodered-status",
        "closeQos": "0",
        "closePayload": "going offline",
        "closeMsg": {},
        "willTopic": "nodered-status",
        "willQos": "0",
        "willPayload": "unexpected disconnect",
        "willMsg": {},
        "sessionExpiry": ""
    }
]